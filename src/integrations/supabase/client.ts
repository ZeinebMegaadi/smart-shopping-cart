
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://nflbaphvprbowimaexom.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5mbGJhcGh2cHJib3dpbWFleG9tIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzNjIyNzYsImV4cCI6MjA1OTkzODI3Nn0.l7Ag_HK_RP39TQ___75SCmOv-UFao9oEukh6wz4SfRc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create the client with enhanced logging for troubleshooting
const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
  },
  global: {
    fetch: (...args) => {
      // Fix: Properly type the arguments to resolve the spread operator issue
      const [url, options] = args as [RequestInfo, RequestInit?];
      console.log(`Supabase Fetch: ${options?.method || 'GET'} ${typeof url === 'string' ? url : url.toString()}`);
      
      // Track start time to measure response time
      const startTime = new Date().getTime();
      
      return fetch(url, options).then(response => {
        // Calculate response time
        const endTime = new Date().getTime();
        const responseTime = endTime - startTime;
        
        console.log(`Supabase Response: ${response.status} (${responseTime}ms)`);
        return response;
      }).catch(error => {
        console.error('Supabase Fetch Error:', error);
        throw error;
      });
    }
  }
});

// Export the enhanced client
export { supabase };
